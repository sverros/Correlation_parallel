import numpy as np

def optimize(var, size):
    row_lats = np.zeros(var['M'])
    for i in range(0,var['M']):
        row_lats[i] = var['site_collection_SM'].lats[i*var['N']]
    
    sta_lats = var['site_collection_station'].lats

    weights = np.ones(var['M'])
    for i in range(0,var['K']):
        for j in range(1,var['M']):
            if ((sta_lats[i] >= row_lats[j])and(sta_lats[i] <= row_lats[j-1]))or(
                (sta_lats[i] <= row_lats[j])and(sta_lats[i] >= row_lats[j-1])):
                weights[j] += 5
                break

    total = np.floor(sum(weights)/size)

    n_rows = np.zeros(size)
    approx_wt = np.zeros(size)

    for i in range(0,size-1):
        while approx_wt[i] < total:
            n_rows[i] += 1
            approx_wt[i] += weights[int(sum(n_rows))]
        n_rows[i] -= 1


    approx_wt[-1] = sum(weights[sum(n_rows):])

    if 0.66*approx_wt[-1] > approx_wt[0:-2].all():
        n_rows += 1
        
    diff = var['M'] - sum(n_rows)
    n_rows[-1] += diff

    return n_rows
